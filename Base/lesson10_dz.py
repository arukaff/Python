# Задание 1. Квадраты чисел
# Пользователь вводит число N. Напишите программу, которая генерирует
# последовательность из квадратов чисел от 1 до N (1 ** 2, 2 ** 2, 3 ** 2 и так
# далее). Реализацию напишите двумя способами: функция-генератор и
# генераторное выражение.

n=5

gen_1=(i**2 for i in range(1,n+1))
print(*gen_1)

def gen_2(n):
    for i in range(1, n + 1):
        yield i**2


print(*gen_2(n))

# Задача 2. Однострочный генератор словаря
# Напишите однострочный генератор словаря, который принимает на вход три
# списка одинаковой длины: имена str, ставка int, премия str с указанием
# процентов вида 10.25%.
# В результате result получаем словарь с именем в качестве ключа и суммой
# премии в качестве значения.
# Сумма рассчитывается как ставка умноженная на процент премии.
# Не забудьте распечатать в конце результат.
# Пример использования.
# На входе:
# names = ["Alice", "Bob", "Charlie"]
# salary = [5000, 6000, 7000]
# bonus = ["10%", "5%", "15%"]
# На выходе:
# {'Alice': 500.0, 'Bob': 300.0, 'Charlie': 1050.0}

names = ["Alice", "Bob", "Charlie"]
salary = [5000, 6000, 7000]
bonus = ["10%", "5%", "15%"]

dict_1={
    names[i]:salary[i]*float(bonus[i].replace('%',''))/100
    for i in range(len(names))
}
print(dict_1)


def calculate_bonus(names, salary, bonus):
    """
    Рассчитывает бонус для каждого сотрудника.
    :param names: Список имен сотрудников.
    :param salary: Список зарплат сотрудников.
    :param bonus: Список премий в процентах.
    :return: Словарь с именем сотрудника в качестве ключа и суммой
    премии в качестве значения.
    """
    # Генератор словаря для расчета бонуса: имя сотрудника -> сумма премии
    result = {names[i]: round(salary[i] * float(bonus[i].strip('%'))
    / 100, 2) for i in range(len(names))}
    return result
# Пример использования функции

result = calculate_bonus(names, salary, bonus)
print(result)

# Задача 3. Генератор последовательности чисел Фибоначчи
# Напишите генераторную функцию fibonacci(n), которая принимает на вход
# одно целое число n и возвращает последовательность первых n чисел
# Фибоначчи. Числа Фибоначчи — это последовательность, в которой каждое
# число является суммой двух предыдущих, начиная с 0 и 1.

def fibonacci(n):
    # Начальные значения последовательности Фибоначчи: 0 и 1
    a, b = 0, 1
    # Генерация первых n чисел Фибоначчи
    for _ in range(n):
        yield a # Возвращаем текущее значение a
        a, b = b, a + b # Обновляем значения a и b для следующей итерации
# Пример вывода первых 10 чисел Фибоначчи
for number in fibonacci(10):
    print(number)


# Задача 4. Генератор подстрок
# Напишите генераторную функцию substrings(s), которая принимает строку
# s и возвращает генератор всех возможных подстрок этой строки.
# На вход подается строка abc
# На выходе будут выведены обозначения:
# a
# ab
# abc
# b
# bc
# c
def substrings(s):
    length=len(s)
    for start in range(length):
    # Итерируем от текущей позиции до конца строки
        for end in range(start + 1, length + 1):
            yield s[start:end]
print(*substrings('fjkfdfkgbd'))
# Требуется вывести те элементы
# первого массива (в том порядке, в каком они идут в первом
# массиве), которых нет во втором массиве. Пользователь вводит
# число N - количество элементов в первом массиве, затем N
# чисел - элементы массива. Затем число M - количество
# элементов во втором массиве. Затем элементы второго массива
# Ввод: Вывод: 3 3 2 12
# 7 
# 3 1 3 4 2 4 12
# 6
# 4 15 43 1 15 1 
# каждое число вводится с новой строки

lst1=[3,1,3,4,2,4,12]
lst2=[4,15,43,115,1]
for i in lst1:
    if i not in lst2:
        print(i)


# Дан массив, состоящий из целых чисел. Напишите
# программу, которая в данном массиве определит
# количество элементов, у которых два соседних и, при
# этом, оба соседних элемента меньше данного. Сначала
# вводится число N — количество элементов в массиве
# Далее записаны N чисел — элементы массива. Массив
# состоит из целых чисел.
# Ввод:      Ввод:
# 5          5
# 1 2 3 4 5    1 5 1 5 1
# Вывод:     Вывод:
# 0          2
# (каждое число вводится с новой строки)
lst=[1,5,1,5,1]
count=0
for i in range(1,len(lst)-1):
    if lst[i-1]<lst[i] and lst[i+1]<lst[i]:
        count+=1
print(count)

# Задача №43. Решение в группах
# Дан список чисел. Посчитайте, сколько в нем пар
# элементов, равных друг другу. Считается, что любые
# два элемента, равные друг другу образуют одну пару,
# которую необходимо посчитать. Вводится список
# чисел. Все числа списка находятся на разных
# строках.
# Ввод:         Вывод:
# 1 2 3 2 3     2
lst=[1,2,3,2,3]
count=0
for i in range(len(lst)):
    for j in range(i+1,len(lst)):
        if lst[i]==lst[j]:
           count+=1
           break 
print(count)

# Задача №45. Решение в группах
# Два различных натуральных числа n и m называются
# дружественными, если сумма делителей числа n
# (включая 1, но исключая само n) равна числу m и
# наоборот. Например, 220 и 284 – дружественные числа.
# По данному числу k выведите все пары дружественных
# чисел, каждое из которых не превосходит k. Программа
# получает на вход одно натуральное число k, не
# превосходящее 105
# . Программа должна вывести все
# пары дружественных чисел, каждое из которых не
# превосходит k. Пары необходимо выводить по одной в
# строке, разделяя пробелами. Каждая пара должна быть
# выведена только один раз (перестановка чисел новую
# пару не дает).
# Ввод: Вывод:
# 300   220 284
def s_d(n):
    return sum([i for i in range(1, n//2+1) if n % i == 0])

n = 300 #int(input ('Введите число N '))
ls=[i for i in range(1, n+1)]
#print(ls)
ks=[s_d(i) for i in ls]
#print(ks)
ins=[]
for i in range(len(ks)):
    for j in range(i+1,len(ks)):
        if ls[i]==ks[j] and ks[j] not in ins and ls[j]==ks[i]:
           print(ls[i],' ',ls[j])
           ins.append(ks[i])
           break 
#print(ins)

# for i in range(1,300):
#     summ=1
#     summ1=1
#     for j in range(2,i//2+1):
#         if i%j==0:
#             summ+=j
#     for x in range(2,summ//2+1):
#         if summ%x==0:
#             summ1+=x
#     if i==summ1 and i<summ:
#         print('Ответ  ',i,summ)

#ДЗ

# Задача 30: Заполните массив элементами арифметической
# прогрессии. Её первый элемент, разность и количество
# элементов нужно ввести с клавиатуры. Формула для
# получения n-го члена прогрессии: an = a1 + (n-1) * d.
# Каждое число вводится с новой строки.
# Ввод: 7 2 5
# Вывод: 7 9 11 13 15

ins=[7,2,5]
ls=[ins[0]+i*ins[1] for i in range(ins[2])]
print(ls)

# другое решение
# for i in range(ins[2]):
#     print(ins[0]+i*ins[1])

# Задача 32: Определить индексы элементов массива (списка),
# значения которых принадлежат заданному диапазону (т.е. не
# меньше заданного минимума и не больше заданного
# максимума)
# Ввод: [-5, 9, 0, 3, -1, -2, 1, 4, -2, 10, 2, 0, -9, 8, 10, -9, 0, -5, -5, 7]
# Вывод: [1, 9, 13, 14, 19]
ls=[-5, 9, 0, 3, -1, -2, 1, 4, -2, 10, 2, 0, -9, 8, 10, -9, 0, -5, -5, 7]
ins=[-6,11]
res=[i for i in range(len(ls)) if (ls[i]>=ins[0] and ls[i]<=ins[1])]
for item in res:
    print(item)

# другое решение
# for i in range(len(list_1)):
#   if min_number <= list_1[i] <= max_number:
#     print(i)
 

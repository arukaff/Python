# Задание 1. Рамка
# Напишите программу, которая рисует прямоугольную рамку с помощью
# символьной графики. Для вертикальных линий используйте символ
# вертикального штриха (|), а для горизонтальных — дефис (-). Пусть ширину и
# высоту рамки определяет пользователь.


# Пользователь вводит размеры рамки
width = int(input("Введите ширину рамки: "))
height = int(input("Введите высоту рамки: "))
# Внешний цикл отвечает за строки (высота)
for line in range(height + 1):
    # Внутренний цикл отвечает за столбцы (ширина)
    for col in range(width + 1):
    # Если текущий столбец - первый или последний, рисуем вертикальную границу
        if col == width or col == 0:
            print('|', end='')
    # Если текущая строка - первая или последняя, рисуем горизонтальную границу
        elif line == height or line == 0:
            print('-', end='')
    # В остальных случаях оставляем пробелы
        else:
            print(' ', end='')
    # Завершаем текущую строку и переходим к следующей
    print()

# Задача 2. Треугольник
# Треугольник существует только тогда, когда сумма любых двух его сторон
# больше третьей. Дано a, b, c - стороны предполагаемого треугольника.
# Требуется сравнить длину каждого отрезка-стороны с суммой двух других. Если
# хотя бы в одном случае отрезок окажется больше суммы двух других, то
# треугольника с такими сторонами не существует. Отдельно сообщить является
# ли треугольник разносторонним, равнобедренным или равносторонним.

# Запрос у пользователя длин сторон треугольника
a = float(input("Введите сторону a: "))
b = float(input("Введите сторону b: "))
c = float(input("Введите сторону c: "))
# Проверка условия существования треугольника
if a + b > c and a + c > b and b + c > a:
    print("Треугольник существует.")
    # Проверка, является ли треугольник равносторонним
    if a == b == c:
        print("Треугольник равносторонний.")
    # Проверка, является ли треугольник равнобедренным
    elif a == b or b == c or a == c:
        print("Треугольник равнобедренный.")
    # Если треугольник не равносторонний и не равнобедренный, то он разносторонний
    else:
        print("Треугольник разносторонний.")
else:
    print("Треугольник не существует.")



# Задача 3. Простые числа
# Напишите программу, которая считает количество простых чисел в заданной
# последовательности и выводит ответ на экран.
# Запрос количества чисел в последовательности
n = int(input('Введите количество чисел в последовательности: '))
# Инициализация счётчика простых чисел
count = 0
# Основной цикл для ввода чисел
for i in range(n):
    # Запрос очередного числа от пользователя
    number = int(input('Введите очередное число: '))
    # Проверка числа на простоту
    if number > 1: # Простые числа начинаются с 2
        for divider in range(2, number):
            # Если число делится на divider, оно не является простым
            if number % divider == 0:
                break
            else:
                # Если цикл завершился без break, число простое
                count += 1
# Вывод количества простых чисел в последовательности
print('Количество простых чисел:', count)


# Задача 4. Яма
# Представьте, что вы разрабатываете компьютерную игру с текстовой графикой.
# Вам поручили создать генератор ландшафта. Напишите программу, которая
# получает на вход число N и выводит на экран числа в виде ямы:

# Запрос у пользователя глубины ямы
depth = int(input('Введите глубину ямы: '))
# Внешний цикл проходит по каждой строке ямы
for line in range(depth):
    # Генерация левой части ямы
    for left_number in range(depth, depth - line - 1, -1):
        print(left_number, end="")
    # Подсчёт количества точек
    point_count = 2 * (depth - line - 1)
    # Вывод точек
    print("." * point_count, end="")
    # Генерация правой части ямы
    for right_number in range(depth - line, depth + 1):
        print(right_number, end="")
    # Переход на новую строку после завершения текущей
    print()
# Задание №1
# ✔ Пользователь вводит строку из четырёх
# или более целых чисел, разделённых символом “/”.
# Сформируйте словарь, где:
# ✔второе и третье число являются ключами.
# ✔первое число является значением для первого ключа.
# ✔четвертое и все возможные последующие числа
#  хранятся в кортеже как значения второго ключа.

#data=input("Введите цифры через слеш").split('/')
data=[2,4,5,3,6,8,17]
n1,n2,n3,*n4=data
dict_1={
    int(n2):int(n1),
    int(n3):tuple(map(int,n4)),
}
print(dict_1)


# Задание №2
# ✔ Самостоятельно сохраните в переменной строку текста.
# ✔ Создайте из строки словарь, где ключ — буква, а значение — код буквы.
# ✔ Напишите преобразование в одну строку. 
s="Напишите преобразование в одну строку"
dict_2={i: ord(i) for i in s}
print(dict_2)

# Задание №3
# ✔ Продолжаем развивать задачу 2.
# ✔ Возьмите словарь, который вы получили.
# Сохраните его итераторатор.
# ✔ Далее выведите первые 5 пар ключ-значение,
# обращаясь к итератору, а не к словарю.
iter_1=iter(dict_2.items())
for _ in range(5):
    print(*next(iter_1))


# Задание №4
# ✔ Создайте генератор чётных чисел от нуля до 100.
# ✔ Из последовательности исключите
# числа, сумма цифр которых равна 8.
# ✔ Решение в одну строку.

gen_num=(i for i in range(0, 100,2) if i%10+i//10 !=8)
print(*gen_num)


# Задание №5
# ✔ Напишите программу, которая выводит
# на экран числа от 1 до 100.
# ✔ При этом вместо чисел, кратных трем,
# программа должна выводить слово «Fizz»
# ✔ Вместо чисел, кратных пяти — слово «Buzz».
# ✔ Если число кратно и 3, и 5, то программа
# должна выводить слово «FizzBuzz».
# ✔ *Превратите решение в генераторное выражение.
print(*(
    "FizzBuzz" if i%(5*3)==0 else 
    'Fizz' if i%5==0 else 
    'Buzz' if i%3==0 else i 
    for i in range(1, 100)
), sep='\n')

# Задание №6
# ✔ Выведите в консоль таблицу умножения
# от 2х2 до 9х10 как на школьной тетрадке.
# ✔ Таблицу создайте в виде однострочного
# генератора, где каждый элемент генератора —
# отдельный пример таблицы умножения.
# ✔ Для вывода результата используйте «принт»
# без перехода на новую строку.
COLUM=4
UP_LIMIT=10
LOW_LIMIT=2
table =(
    f'{num_1:>2} *{num_2:>2} = {num_1*num_2:>2}\t' if num_1 !=row+COLUM-1 else
    f'{num_1:>2} *{num_2:>2} = {num_1*num_2:>2}\n' if num_2 !=UP_LIMIT else
    f'{num_1:>2} *{num_2:>2} = {num_1*num_2:>2}\n\n'
    for row in (LOW_LIMIT,LOW_LIMIT+COLUM)
    for num_2 in range(LOW_LIMIT,UP_LIMIT+1)
    for num_1 in range(row,row+COLUM)
)
print(*table)


# Задание №7
# ✔ Создайте функцию-генератор.
# ✔ Функция генерирует N простых чисел,
# начиная с числа 2.
# ✔ Для проверки числа на простоту используйте
# правило: «число является простым, если делится
# нацело только на единицу и на себя».


def isprime(num):
    prime_num=2
    yield prime_num
    prime_num=3
    count = 2
    yield prime_num
    while count < num:
        prime_num += 2
        for div in range(3,prime_num,2):
            if prime_num % div ==0:
                break
        else:
            count +=1
            yield prime_num


print(*isprime(5))